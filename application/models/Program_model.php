<?php
/*
 * Generated by CRUDigniter v3.0 Beta
 * www.crudigniter.com
 */

class Program_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }

    /*
     * Get program by kode_prog
     */
    function get_program($kode_prog)
    {      
      return $this->db->get_where('program',array('kode_prog'=>$kode_prog))->row_array();
    }

    /*
     * Get all program
     */
    function get_all_program($kode_pd,$kode_prog_btl,$bulan_ini)
    {
        $this->db->select('
          a.*,(SELECT COUNT(kode_giat) FROM kegiatan AS d WHERE d.kode_prog=a.kode_prog) as jlh_giat, 
          SUM(c.pagu_giat_'.$bulan_ini.') AS pagu_total, 
          CAST(RIGHT(a.kode_prog,LOCATE(".",REVERSE(a.kode_prog))-1) AS UNSIGNED) AS kode_prog2');
        $this->db->join('kegiatan as b', 'a.kode_prog = b.kode_prog', 'left');
        $this->db->join('belanja as c', 'b.kode_giat = c.kode_giat', 'left');    
        $this->db->group_by('a.kode_prog'); 
        $this->db->order_by('kode_prog2');    
        return $this->db->get_where('program as a',array('a.kode_pd'=>$kode_pd, 'a.kode_prog <>'=>$kode_prog_btl ))->result_array();
    }

    function get_all_program_total($kode_pd,$kode_prog_btl,$bulan_ini)
    {
        $this->db->select('a.*,(SELECT COUNT(kode_giat) FROM kegiatan AS d WHERE d.kode_prog=a.kode_prog) as jlh_giat, sum(c.pagu_giat_'.$bulan_ini.') as pagu_total');
        $this->db->join('kegiatan as b', 'a.kode_prog = b.kode_prog', 'left');
        $this->db->join('belanja as c', 'b.kode_giat = c.kode_giat', 'left');    
        $this->db->group_by('a.kode_prog');    
        $total = $this->db->get_where('program as a',array('a.kode_pd'=>$kode_pd, 'a.kode_prog <>'=>$kode_prog_btl ))->result_array();
        $pagu = 0;
        foreach ($total as $key => $value) {
          $pagu = $pagu + $value['pagu_total'];
        }
        return $pagu;
    }   

    function get_jumlah_program($kode_pd,$kode_prog_btl)
    {
        $this->db->select('COUNT(kode_prog) AS jumlah_program');
        //$this->db->group_by('a.kode_prog');    
        $total = $this->db->get_where('program as a',array('a.kode_pd'=>$kode_pd, 'a.kode_prog <>'=>$kode_prog_btl ))->result_array();
        return $total[0]['jumlah_program'];
    }  

    function get_jumlah_program_kota($tahun_anggaran)
    {
      $sql = '
        SELECT COUNT(kode_prog) AS jumlah_program
        FROM program AS a
        WHERE 
          a.tahun_anggaran = "'.$tahun_anggaran.'" AND        
          a.kode_prog NOT IN (SELECT kode_prog_btl FROM pd WHERE kode_prog_btl <> "")';
      $query = $this->db->query($sql);
      return $query->result_array()[0]['jumlah_program'];
    } 

    /*
     * function to add new program
     */
    function add_program($params)
    {
        $this->db->insert('program',$params);
        return $this->db->insert_id();
    }

    /*
     * function to update program
     */
    function update_program($kode_prog,$params)
    {
        $this->db->where('kode_prog',$kode_prog);
        $response = $this->db->update('program',$params);
        if($response)
        {
            return "program updated successfully";
        }
        else
        {
            return "Error occuring while updating program";
        }
    }

    /*
     * function to delete program
     */
    function delete_program($kode_prog)
    {
        $response = $this->db->delete('program',array('kode_prog'=>$kode_prog));
        if($response)
        {
            return "program deleted successfully";
        }
        else
        {
            return "Error occuring while deleting program";
        }
    }

    function check_duplicate($kode_prog)
    {
      $this->db->select('*');
      $this->db->from('program');
      $this->db->where(array('kode_prog'=>$kode_prog));
      $query = $this->db->get();
      $count_row = $query->num_rows();
      if ($count_row > 0) {
          return FALSE;
       } else {
          return TRUE;
       }
    }
}
