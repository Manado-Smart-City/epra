<?php
/*
 * Generated by CRUDigniter v3.0 Beta
 * www.crudigniter.com
 */

class Pphp_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }

    /*
     * Get pphp by nip_p
     */
    function get_pphp($nip_p)
    {
        return $this->db->get_where('pphp',array('nip_p'=>$nip_p))->row_array();
    }

    /*
     * Get all pphp
     */
    function get_all_pphp($kode_pd)
    {
        return $this->db->get_where('pphp',array('pphp_pd'=>$kode_pd))->result_array();
    }

    /*
     * function to add new pphp
     */
    function add_pphp($params)
    {
        $this->db->insert('pphp',$params);
        return $this->db->insert_id();
    }

    /*
     * function to update pphp
     */
    function update_pphp($nip_p,$params)
    {
        $this->db->where('nip_p',$nip_p);
        $response = $this->db->update('pphp',$params);
        if($response)
        {
            return "pphp updated successfully";
        }
        else
        {
            return "Error occuring while updating pphp";
        }
    }

    /*
     * function to delete pphp
     */
    function delete_pphp($nip_p)
    {
        $response = $this->db->delete('pphp',array('nip_p'=>$nip_p));
        if($response)
        {
            return "pphp deleted successfully";
        }
        else
        {
            return "Error occuring while deleting pphp";
        }
    }

    function check_duplicate($nip_p)
    {
      $this->db->select('*');
      $this->db->from('pphp');
      $this->db->where(array('nip_p'=>$nip_p));
      $query = $this->db->get();
      $count_row = $query->num_rows();
      if ($count_row > 0) {
          return FALSE;
       } else {
          return TRUE;
       }
    }
}
