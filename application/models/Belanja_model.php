<?php
/*
 * Generated by CRUDigniter v3.0 Beta
 * www.crudigniter.com
 */

class Belanja_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }

    /*
     * Get program by kode_prog
     */
    function get_belanja($kode_rek_belanja)
    {
      return $this->db->get_where('belanja',array('kode_rek_belanja'=>$kode_rek_belanja))->row_array();
    }

    function get_belanja_swakelola_view($kode_rek_belanja)
    {
      $sql = '
        SELECT 
          a.*
        FROM belanja AS a
        WHERE
          a.kode_rek_belanja = "'.$kode_rek_belanja.'"     
        ';
      $query = $this->db->query($sql);
      return $query->row_array();
    }

    function get_belanja_pengadaan_view($kode_rek_belanja)
    {
      $sql = '
        SELECT 
          a.*,  
          b.nip_p AS nip_ppk,
          b.nama_p AS nama_ppk,
          b.jabat_p AS jabatan_ppk,
          b.alamat_p AS alamat_ppk,
          b.email_p AS email_ppk,    
          b.hp_p AS hp_ppk,
          b.foto_p AS foto_ppk,
          c.nip_p AS nip_pp,
          c.nama_p AS nama_pp,
          c.jabat_p AS jabatan_pp,
          c.alamat_p AS alamat_pp,
          c.email_p AS email_pp,    
          c.hp_p AS hp_pp,
          c.foto_p AS foto_pp
        FROM belanja AS a
        LEFT JOIN pejabat AS b ON a.nip_ppk = b.nip_p
        LEFT JOIN pejabat AS c ON a.nip_pp = c.nip_p
        WHERE
          a.kode_rek_belanja = "'.$kode_rek_belanja.'"     
        ';
      $query = $this->db->query($sql);
      return $query->row_array();
    }
    /*
     * Get all program
     */
    function get_all_belanja($kode_giat)
    {
        //$this->db->select('kode_rek_belanja,kode_giat,nama_belanja,pagu_giat');
        $this->db->from('belanja');
        //$this->db->join('kegiatan as b', 'a.kode_giat = b.kode_giat');
        $this->db->where(array('kode_giat'=>$kode_giat));
        return $this->db->get()->result_array();
        //return $this->db->get_where('program',array('kode_pd'=>$kode_pd))->result_array();
    }

    function get_all_belanja_total($kode_giat)
    {
        $this->db->select_sum('pagu_giat');
        $this->db->from('belanja');        
        $this->db->where(array('kode_giat'=>$kode_giat));
        $total = $this->db->get()->result_array();
        return $total[0]['pagu_giat'];
        //return $this->db->get_where('program',array('kode_pd'=>$kode_pd))->result_array();
    }    

    function get_all_total_anggaran_pd($kode_pd)
    {
        $this->db->select_sum('a.pagu_giat');
        $this->db->from('belanja as a');      
        $this->db->join('kegiatan as b', 'a.kode_giat = b.kode_giat');  
        $this->db->join('program as c', 'b.kode_prog = c.kode_prog');  
        $this->db->where(array('kode_pd'=>$kode_pd));
        $total = $this->db->get()->result_array();
        return $total[0]['pagu_giat'];
    }  

    function get_all_total_anggaran_kota($tahun_anggaran)
    {
        $this->db->select_sum('a.pagu_giat');
        $this->db->from('belanja as a');      
        $this->db->join('kegiatan as b', 'a.kode_giat = b.kode_giat');  
        $this->db->join('program as c', 'b.kode_prog = c.kode_prog');  
        $this->db->where(array('a.tahun_anggaran'=>$tahun_anggaran));
        $this->db->where(array('b.tahun_anggaran'=>$tahun_anggaran));
        $this->db->where(array('c.tahun_anggaran'=>$tahun_anggaran));
        $total = $this->db->get()->result_array();
        return $total[0]['pagu_giat'];
    } 

    function get_all_total_anggaran_bl_pd($kode_pd,$kode_prog_btl)
    {
        $this->db->select_sum('a.pagu_giat');
        $this->db->from('belanja as a');      
        $this->db->join('kegiatan as b', 'a.kode_giat = b.kode_giat');  
        $this->db->join('program as c', 'b.kode_prog = c.kode_prog');  
        $this->db->where(array('c.kode_pd'=>$kode_pd, 'c.kode_prog <>'=>$kode_prog_btl));
        $total = $this->db->get()->result_array();
        return $total[0]['pagu_giat'];
    } 

    function get_all_total_anggaran_bl_kota($tahun_anggaran)
    {
      $sql = '
        SELECT SUM(a.pagu_giat) AS total_anggaran_bl_kota
        FROM belanja AS a
        JOIN kegiatan AS b ON a.kode_giat = b.kode_giat
        JOIN program AS c ON b.kode_prog = c.kode_prog
        WHERE 
          a.tahun_anggaran = "'.$tahun_anggaran.'" AND
          b.tahun_anggaran = "'.$tahun_anggaran.'" AND
          c.tahun_anggaran = "'.$tahun_anggaran.'" AND         
          c.kode_prog NOT IN (SELECT kode_prog_btl FROM pd WHERE kode_prog_btl <> "")';
      $query = $this->db->query($sql);
      return $query->result_array()[0]['total_anggaran_bl_kota'];
    } 

    function get_all_total_anggaran_btl_pd($kode_pd,$kode_prog_btl)
    {
        $this->db->select_sum('a.pagu_giat');
        $this->db->from('belanja as a');      
        $this->db->join('kegiatan as b', 'a.kode_giat = b.kode_giat');  
        $this->db->join('program as c', 'b.kode_prog = c.kode_prog');   
        $this->db->where(array('c.kode_pd'=>$kode_pd, 'c.kode_prog'=>$kode_prog_btl));
        $total = $this->db->get()->result_array();
        return $total[0]['pagu_giat'];
    } 

    function get_all_total_anggaran_btl_kota($tahun_anggaran)
    {
      $sql = '
        SELECT SUM(a.pagu_giat) AS total_anggaran_btl_kota
        FROM belanja AS a
        JOIN kegiatan AS b ON a.kode_giat = b.kode_giat
        JOIN program AS c ON b.kode_prog = c.kode_prog
        WHERE 
          a.tahun_anggaran = "'.$tahun_anggaran.'" AND
          b.tahun_anggaran = "'.$tahun_anggaran.'" AND
          c.tahun_anggaran = "'.$tahun_anggaran.'" AND         
          c.kode_prog IN (SELECT kode_prog_btl FROM pd WHERE kode_prog_btl <> "")';
      $query = $this->db->query($sql);
      return $query->result_array()[0]['total_anggaran_btl_kota'];
    } 


    function get_jumlah_belanja($kode_pd,$kode_giat_btl)
    {
        $this->db->select('COUNT(kode_rek_belanja) AS jumlah_belanja');
        $this->db->join('kegiatan as b', 'a.kode_giat = b.kode_giat');  
        $this->db->join('program as c', 'b.kode_prog = c.kode_prog'); 
        $total = $this->db->get_where('belanja as a',array('c.kode_pd'=>$kode_pd, 'b.kode_giat <>'=>$kode_giat_btl ))->result_array();
        return $total[0]['jumlah_belanja'];
    }  

    function get_jumlah_belanja_swakelola($kode_pd,$kode_giat_btl)
    {
        $this->db->select('COUNT(kode_rek_belanja) AS jumlah_belanja_swakelola');
        $this->db->join('kegiatan as b', 'a.kode_giat = b.kode_giat');  
        $this->db->join('program as c', 'b.kode_prog = c.kode_prog'); 
        $total = $this->db->get_where('belanja as a',
        array(
            'c.kode_pd'=>$kode_pd,
            'a.jenis_kegiatan'=>'Swakelola',  
            'b.kode_giat <>'=>$kode_giat_btl 
        ))->result_array();
        return $total[0]['jumlah_belanja_swakelola'];
    }  

    function get_jumlah_belanja_pengadaan($kode_pd,$kode_giat_btl)
    {
        $this->db->select('COUNT(kode_rek_belanja) AS jumlah_belanja_pengadaan');
        $this->db->join('kegiatan as b', 'a.kode_giat = b.kode_giat');  
        $this->db->join('program as c', 'b.kode_prog = c.kode_prog'); 
        $total = $this->db->get_where('belanja as a',
        array(
            'c.kode_pd'=>$kode_pd,
            'a.jenis_kegiatan'=>'Pengadaan',  
            'b.kode_giat <>'=>$kode_giat_btl 
        ))->result_array();
        return $total[0]['jumlah_belanja_pengadaan'];
    } 

    function get_jumlah_belanja_kota($tahun_anggaran)
    {
      $sql = '
        SELECT COUNT(kode_rek_belanja) AS jumlah_belanja
        FROM belanja AS a
        WHERE 
          a.tahun_anggaran = "'.$tahun_anggaran.'" AND        
          a.kode_giat NOT IN (SELECT kode_giat_btl FROM pd WHERE kode_giat_btl <> "")';
      $query = $this->db->query($sql);
      return $query->result_array()[0]['jumlah_belanja'];
    }  

    function get_all_unconfirmed_belanja($kode_giat,$bulan_ini)
    {
        $this->db->select('kode_rek_belanja,kode_giat,nama_belanja,pagu_giat_'.$bulan_ini);
        //$this->db->from('belanja');
        //$this->db->join('kegiatan as b', 'a.kode_giat = b.kode_giat');
        $where = "kode_giat='$kode_giat' AND (jenis_kegiatan IS NULL OR jenis_kegiatan='')";
        //$this->db->where(array('kode_giat'=>$kode_giat, 'jenis_kegiatan' => NULL));
        //$this->db->or_where(array('jenis_kegiatan' => NULL, 'jenis_kegiatan' => ''));
        //return $this->db->get()->result_array();
        return $this->db->get_where('belanja',$where)->result_array();
    }

    function get_all_belanja_swakelola($kode_giat,$bulan_ini)
    {
        $this->db->select('a.*, GREATEST(kf_1,kf_2,kf_3,kf_4,kf_5,kf_6,kf_7,kf_8,kf_9,kf_10,kf_11,kf_12) AS kf_terbesar, GREATEST(kk_1,kk_2,kk_3,kk_4,kk_5,kk_6,kk_7,kk_8,kk_9,kk_10,kk_11,kk_12) AS kk_terbesar');
        $this->db->from('belanja as a');
        //$this->db->join('kegiatan as b', 'a.kode_giat = b.kode_giat');
        $this->db->where(array('a.kode_giat'=>$kode_giat, 'a.jenis_kegiatan'=>"swakelola"));
        return $this->db->get()->result_array();
        //return $this->db->get_where('program',array('kode_pd'=>$kode_pd))->result_array();
    }

    function get_all_belanja_pengadaan($kode_giat,$bulan_ini)
    {
        $this->db->select('a.*, GREATEST(kf_1,kf_2,kf_3,kf_4,kf_5,kf_6,kf_7,kf_8,kf_9,kf_10,kf_11,kf_12) AS kf_terbesar, GREATEST(kk_1,kk_2,kk_3,kk_4,kk_5,kk_6,kk_7,kk_8,kk_9,kk_10,kk_11,kk_12) AS kk_terbesar');
        $this->db->from('belanja as a');
        //$this->db->join('kegiatan as b', 'a.kode_giat = b.kode_giat');
        $this->db->where(array('a.kode_giat'=>$kode_giat, 'a.jenis_kegiatan'=>"pengadaan"));
        return $this->db->get()->result_array();
        //return $this->db->get_where('program',array('kode_pd'=>$kode_pd))->result_array();
    }

    function get_all_pphp($kode_rek_belanja)
    {
        $this->db->select('a.nip_pphp, c.nama_p, b.nama_pd');
        $this->db->from('pphp as a');        
        $this->db->join('pejabat as c', 'a.nip_pphp = c.nip_p');
        $this->db->join('pd as b', 'c.kode_pd_asal = b.kode_pd');
        $this->db->where(array('a.kode_rek_belanja'=>$kode_rek_belanja));
        return $this->db->get()->result_array();
        //return $this->db->get_where('program',array('kode_pd'=>$kode_pd))->result_array();
    }

    function get_all_hasil_pemeriksaan($kode_rek_belanja)
    {
        $this->db->from('hasil_pemeriksaan as a');
        $this->db->where(array('a.kode_rek_belanja'=>$kode_rek_belanja));
        return $this->db->get()->result_array();
    }    

    function get_all_foto_realisasi($kode_rek_belanja)
    {
        $this->db->from('foto_realisasi as a');
        $this->db->where(array('a.kode_rek_belanja'=>$kode_rek_belanja));
        return $this->db->get()->result_array();
    }      
    /*
     * function to add new program
     */
    function add_belanja($params)
    {
        $this->db->insert('belanja',$params);
        return $this->db->insert_id();
    }

    function add_pphp($params)
    {
        $this->db->insert('pphp',$params);
        return $this->db->insert_id();
    }

    function add_hasil_pemeriksaan($params)
    {
        $this->db->insert('hasil_pemeriksaan',$params);
        return $this->db->insert_id();
    }

    function count_foto_realisasi($kode_rek_belanja)
    {
        $this->db->from('foto_realisasi as a');
        $this->db->where(array('a.kode_rek_belanja'=>$kode_rek_belanja));
        return count($this->db->get()->result_array());
    }

    function add_foto_realisasi($params)
    {
        $this->db->insert('foto_realisasi',$params);
        return $this->db->insert_id();
    }

    function delete_pphp($kode_rek_belanja,$nip_pphp)
    {
        $this->db->where('kode_rek_belanja', $kode_rek_belanja);
        $this->db->where('nip_pphp', $nip_pphp);
        $response = $this->db->delete('pphp');
        if($response)
        {
            return "program deleted successfully";
        }
        else
        {
            return "Error occuring while deleting program";
        }
    }    

    function delete_hasil_pemeriksaan($kode_rek_belanja,$id_hasil_pemeriksaan)
    {
        $this->db->where('id_hasil_pemeriksaan', $id_hasil_pemeriksaan);
        $this->db->where('kode_rek_belanja', $kode_rek_belanja);
        $response = $this->db->delete('hasil_pemeriksaan');
        if($response)
        {
            return "program deleted successfully";
        }
        else
        {
            return "Error occuring while deleting program";
        }
    } 

    function delete_foto_realisasi($id_foto_realisasi)
    {
        $this->db->where('id_foto_realisasi', $id_foto_realisasi);
        $response = $this->db->delete('foto_realisasi');
        if($response)
        {
            return "program deleted successfully";
        }
        else
        {
            return "Error occuring while deleting program";
        }
    } 


    /*
     * function to update program
     */
    function update_belanja($kode_rek_belanja,$params)
    {
        $this->db->where('kode_rek_belanja',$kode_rek_belanja);
        $response = $this->db->update('belanja',$params);
        if($response)
        {
            return "program updated successfully";
        }
        else
        {
            return "Error occuring while updating program";
        }
    }

    /*
     * function to delete program
     */
    function delete_belanja($kode_rek_belanja)
    {
        $response = $this->db->delete('belanja',array('kode_rek_belanja'=>$kode_rek_belanja));
        if($response)
        {
            return "program deleted successfully";
        }
        else
        {
            return "Error occuring while deleting program";
        }
    }

    function check_duplicate($kode_rek_belanja)
    {
      $this->db->select('*');
      $this->db->from('belanja');
      $this->db->where(array('kode_rek_belanja'=>$kode_rek_belanja));
      $query = $this->db->get();
      $count_row = $query->num_rows();
      if ($count_row > 0) {
          return FALSE;
       } else {
          return TRUE;
       }
    }
}
