<?php
/*
 * Generated by CRUDigniter v3.0 Beta
 * www.crudigniter.com
 */

class Kegiatan_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }

    /*
     * Get kegiatan by kode_giat
     */
    function get_kegiatan($kode_giat)
    {
        $this->db->select('a.*, b.nama_p AS nama_pptk');
        $this->db->join('pejabat AS b', 'a.nip_pptk = b.nip_p','left');      
        return $this->db->get_where('kegiatan AS a',array('kode_giat'=>$kode_giat))->row_array();
    }

    /*
     * Get all kegiatan
     */
    function get_all_kegiatan($kode_prog,$bulan_ini)
    {
        $this->db->select('
          a.*,COUNT(b.kode_rek_belanja) AS jlh_belanja, 
          SUM(b.pagu_giat_'.$bulan_ini.') AS pagu_total,
          CAST(RIGHT(a.kode_giat,LOCATE(".",REVERSE(a.kode_giat))-1) AS UNSIGNED) AS kode_giat2');
        $this->db->join('belanja as b', 'a.kode_giat = b.kode_giat','left');
        $this->db->group_by('a.kode_giat');
        $this->db->order_by('kode_giat2');
        return $this->db->get_where('kegiatan as a',array('kode_prog'=>$kode_prog))->result_array();
    }

    function get_all_kegiatan_total($kode_prog,$bulan_ini)
    {
        $this->db->select('SUM(b.pagu_giat_'.$bulan_ini.') AS pagu_total');
        $this->db->join('belanja as b', 'a.kode_giat = b.kode_giat');
        $this->db->group_by('a.kode_giat');
        $total = $this->db->get_where('kegiatan as a',array('kode_prog'=>$kode_prog))->result_array();
        $pagu = 0;
        foreach ($total as $key => $value) {
          $pagu = $pagu + $value['pagu_total'];
        }
        return $pagu;        
    }

    function get_jumlah_kegiatan($kode_pd,$kode_giat_btl)
    {
        $this->db->select('COUNT(kode_giat) AS jumlah_kegiatan');
        $this->db->join('program as b', 'a.kode_prog = b.kode_prog');
        $total = $this->db->get_where('kegiatan as a',array('b.kode_pd'=>$kode_pd, 'a.kode_giat <>'=>$kode_giat_btl ))->result_array();
        return $total[0]['jumlah_kegiatan'];
    }      

    function get_jumlah_kegiatan_kota($tahun_anggaran)
    {
      $sql = '
        SELECT COUNT(kode_giat) AS jumlah_kegiatan
        FROM kegiatan AS a
        WHERE 
          a.tahun_anggaran = "'.$tahun_anggaran.'" AND        
          a.kode_giat NOT IN (SELECT kode_giat_btl FROM pd WHERE kode_giat_btl <> "")';
      $query = $this->db->query($sql);
      return $query->result_array()[0]['jumlah_kegiatan'];
    }     

    /*
     * function to add new kegiatan
     */
    function add_kegiatan($params)
    {
        $this->db->insert('kegiatan',$params);
        return $this->db->insert_id();
    }

    /*
     * function to update kegiatan
     */
    function update_kegiatan($kode_giat,$params)
    {
        $this->db->where('kode_giat',$kode_giat);
        $response = $this->db->update('kegiatan',$params);
        if($response)
        {
            return "kegiatan updated successfully";
        }
        else
        {
            return "Error occuring while updating kegiatan";
        }
    }

    /*
     * function to delete kegiatan
     */
    function delete_kegiatan($kode_giat)
    {
        $response = $this->db->delete('kegiatan',array('kode_giat'=>$kode_giat));
        if($response)
        {
            return "Kegiatan deleted successfully";
        }
        else
        {
            return "Error occuring while deleting kegiatan";
        }
    }

    function check_duplicate($kode_giat)
    {
      $this->db->select('*');
      $this->db->from('kegiatan');
      $this->db->where(array('kode_giat'=>$kode_giat));
      $query = $this->db->get();
      $count_row = $query->num_rows();
      if ($count_row > 0) {
          return FALSE;
       } else {
          return TRUE;
       }
    }
}
